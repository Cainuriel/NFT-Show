{"version":3,"sources":["Card.js","helpers/getToken.js","FetchCard.js","App.js","index.js"],"names":["Card","getToken","url","a","fetch","response","json","token","FetchCard","props","useState","name","description","image","scarcity","object","setObject","nftContract","idToken","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","NFT","abi","tokenURI","tokenUri","updateToken","mensajeError","message","Swal","fire","title","text","icon","confirmButtonText","console","log","then","newToken","rarity","attributes","value","useEffect","fetchToken","className","style","maxWidth","src","alt","App","balance","setBalance","network","setNetwork","offSetY","setOffSetY","handleScroll","scrollY","networkData","chainId","chainName","rpcUrls","nativeCurrency","symbol","decimals","blockExplorerUrls","request","method","params","getNetwork","init","accounts","accountConnection","subint","substr","subfinal","document","querySelector","innerHTML","account","tokensOfOwner","contractUserBalance","length","newArray","Object","values","classList","add","remove","on","addEventListener","removeEventListener","checkingNetwork","changeAccounts","showCancelButton","imageUrl","imageAlt","result","isConfirmed","open","imageWidth","addNetwork","transform","id","onClick","type","map","autoPlay","muted","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.16dd0f40.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction Card(props) {\r\n\r\n\r\n  return (\r\n\r\n<div className=\"\">\r\n    <div className=\"card mb-3\" style={{maxWidth: \"500px\"}}>\r\n      <div className=\"row g-0\">\r\n        <div className=\"col-md-4\">\r\n            <img src={props.image} className=\"img-fluid rounded-start\" alt={props.name}/>\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{props.name}</h5>\r\n              <p className=\"card-text\">{props.description}</p>\r\n              <p className=\"card-text\"><small className=\"text-muted\">{props.scarcity}</small></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default Card;","const getToken = async (url) => {\r\n\r\n   //const userId = Math.floor(Math.random() * 4 ) + 1;\r\n\r\nconst response = await fetch(url);\r\nconst token = await response.json();\r\nreturn token;\r\n\r\n}\r\n\r\nexport default getToken;","import React from \"react\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Swal from 'sweetalert2';\r\nimport { ethers } from 'ethers';\r\nimport NFT from './artifacts/contracts/NFTs.sol/NFTs.json';\r\nimport getToken from './helpers/getToken';\r\n\r\nconst FetchCard = (props) => { // @props: La id del NFT\r\n\r\n    const [object, setObject] = useState({\r\n        name: 'name',\r\n        description: 'description',\r\n        image: 'image',\r\n        scarcity: 'scarcity'\r\n      });\r\n       // 0x76e7662384C47608256Cc07F0CD169E1600b1862 contrato con los NFT en local.\r\n    const nftContract = \"0x1A305Ae35df3672f9CBbe2C373CB874922bD0925\"; // TUTORIAL NO USAR\r\n\r\n      // funcion para capturar la URI de un NFT\r\n      async function fetchToken(idToken)  {\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(nftContract, NFT.abi, signer);\r\n\r\n          try {\r\n\r\n            const tokenUri = await contract.tokenURI(idToken);\r\n             updateToken(tokenUri);\r\n\r\n          } catch (err) {\r\n            let mensajeError = err.message;\r\n            Swal.fire({\r\n              title: 'Ooops!',\r\n              text: `${mensajeError}`,\r\n              icon: 'error',\r\n              confirmButtonText: 'Cerrar'\r\n            })\r\n            console.log(\"Error: \", err)\r\n          }\r\n          \r\n   \r\n  }\r\n      // funcion que crea el objeto del token\r\n    const updateToken = async (url) => {\r\n       await getToken(url) // funcion que hace el fetch\r\n            .then(\r\n                (newToken) => {\r\n                  console.log('este es el metadata del token', newToken);\r\n                    setObject(\r\n                        {\r\n                            name: newToken.name,\r\n                            description: newToken.description,\r\n                            image: newToken.image,\r\n                            rarity: newToken.attributes[0].value\r\n                        });\r\n                ;}\r\n            )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        fetchToken(props.idToken);\r\n    }, []);\r\n\r\n    return (\r\n      \r\n        <div key={object.name} className=\"col-lg-4 text-center text-lg-start\">\r\n            <div className=\"card mb-3\" style={{maxWidth: \"500px\"}}>\r\n                <div className=\"row g-0\">\r\n                    <div className=\"col-md-4\">\r\n                    <img src={object.image} className=\"img-fluid rounded-start\" alt={object.name}/>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{object.name}</h5>\r\n                        <p className=\"card-text\">{object.description}</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">{object.rarity}</small></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FetchCard","import React from \"react\";\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Swal from 'sweetalert2';\r\nimport VideoPlayer from \"react-background-video-player\";\r\nimport { ethers } from 'ethers';\r\nimport NFT from './artifacts/contracts/NFTs.sol/NFTs.json';\r\nimport Card from './Card';\r\nimport FetchCard from './FetchCard';\r\n\r\n\r\nfunction App() {\r\n \r\n  const BINANCETESTNET = 'bnbt';\r\n      // 0x76e7662384C47608256Cc07F0CD169E1600b1862 contrato con los NFT en local.\r\n  const nftContract = \"0x1A305Ae35df3672f9CBbe2C373CB874922bD0925\"; // TUTORIAL NO USAR\r\n  const [balance, setBalance] = useState(null);\r\n  const [network, setNetwork] = useState('no-net');\r\n\r\n // parallax effect\r\n  const [offSetY, setOffSetY] = useState(0);\r\n  const handleScroll = () => setOffSetY(window.scrollY);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [])\r\n\r\n  // se comprueba si se dispone de metamask y se activan las funciones de chequeo de red y blockchain\r\n  useEffect(function () {\r\n\r\n    if (typeof window.ethereum !== 'undefined') {\r\n    \r\n    checkingNetwork();\r\n    changeAccounts();\r\n  \r\n \r\n    } else {\r\n            Swal.fire({\r\n              title: \"No tiene metamask instalado\",\r\n              text: \"Cambie de navegador o puede instalárselo apretando al botón\",\r\n              showCancelButton: true,\r\n              confirmButtonText: \"Instalar\",\r\n              imageUrl: './img/metamask-transparent.png',\r\n              imageAlt: \"Instalar metamask\",\r\n            }).then((result) => {\r\n              /* Read more about isConfirmed, isDenied below */\r\n              if (result.isConfirmed) {\r\n                window.open('https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn', '_blank');  \r\n              }})};\r\n        \r\n      },[]);\r\n\r\n  // solo si hay cambios de red se activa este useEffect\r\n  useEffect(function () {\r\n\r\n      // comprueba si se dispone la red adecuada.\r\n      if(network !== BINANCETESTNET && network !== 'no-net' ){ \r\n\r\n          Swal.fire({\r\n            title: '¡Atencion!',\r\n            //text: `Cambia a BSC si la tienes o sigue el siguiente tutorial para configurarla`,\r\n            text: \"Estas en la red \"+network,\r\n            showCancelButton: true,\r\n            confirmButtonText: \"Instalar o cambiar a la red Testnet BSC\",\r\n            //imageUrl: 'https://i2.wp.com/criptotendencia.com/wp-content/uploads/2020/04/binance-smart-chain.jpg?fit=1200%2C674&ssl=1',\r\n            imageUrl: 'https://cryptodaily.io/wp-content/uploads/2021/07/p-2.png',\r\n            imageWidth: 300,\r\n            \r\n            imageAlt: 'Red Binance Smart Chain',\r\n          }).then((result) => {\r\n            /* Read more about isConfirmed, isDenied below */\r\n            if (result.isConfirmed) {\r\n              addNetwork();\r\n              //window.open('https://academy.binance.com/es/articles/connecting-metamask-to-binance-smart-chain', '_blank');  \r\n            }\r\n          })\r\n        } else {\r\n\r\n        console.log('ok network ', network );\r\n      }\r\n        \r\n        console.log('Control de network ', network );\r\n\r\n},[network]);\r\n\r\n  // funcion que cambia o instala a la red de pruebas de BSC\r\n  async function addNetwork() {\r\n\r\n    let networkData = [{\r\n            chainId: \"0x61\",\r\n            chainName: \"BSCTESTNET\",\r\n            rpcUrls: [\"https://data-seed-prebsc-2-s3.binance.org:8545\"],\r\n            nativeCurrency: {\r\n              name: \"BINANCE COIN\",\r\n              symbol: \"BNB\",\r\n              decimals: 18,\r\n            },\r\n            blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\r\n          },\r\n        ];\r\n\r\n      // agregar red o cambiar red\r\n      return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: networkData,\r\n      });\r\n  }\r\n\r\n    // captura de la blockchain de la metamask\r\n  async function checkingNetwork() {\r\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n    // capturamos la red\r\n    const network = await provider.getNetwork();\r\n    console.log('network', network.name);\r\n    setNetwork(network.name);\r\n  }\r\n\r\n  // funcion de conexion a la red.\r\n  async function init() {  \r\n            // captura la cuenta del usuario\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            let accountConnection = accounts[0];\r\n            let subint = accountConnection.substr(0,4);\r\n            let subfinal = accountConnection.substr(-4,4);\r\n            document.querySelector('#intro').innerHTML ='Conectado con la cuenta: ' + subint + '...' + subfinal;\r\n               // comprobacion de NFTs\r\n            const [account] = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n            const contract = new ethers.Contract(nftContract, NFT.abi, signer);\r\n\r\n            try {\r\n              const contractUserBalance = await contract.tokensOfOwner(account);\r\n\r\n              // comprobamos si el usuario tiene avatares.\r\n              if(contractUserBalance.length > 0 && !balance) {\r\n                document.querySelector('#tokens').innerHTML ='Tienes avatares ';\r\n                let newArray = Object.values(contractUserBalance);\r\n                let element = document.querySelector(\"#buy\");\r\n                element.classList.add(\"d-none\");\r\n                \r\n                setBalance(newArray);\r\n               \r\n              }    else {\r\n                document.querySelector('#tokens').innerHTML ='Sin avatares';\r\n                let element = document.querySelector(\"#buy\");\r\n                element.classList.remove(\"d-none\");\r\n              }\r\n\r\n            } catch (err) {\r\n              let mensajeError = err.message;\r\n              Swal.fire({\r\n                title: 'Ooops!',\r\n                text: `${mensajeError}`,\r\n                icon: 'error',\r\n                confirmButtonText: 'Cerrar'\r\n              })\r\n              console.log(\"Error: \", err)\r\n            }\r\n                \r\n  }\r\n\r\n\r\n    // funcion que detecta los cambios de cuenta\r\n    async function changeAccounts() {\r\n          \r\n      if (typeof window.ethereum !== 'undefined') {\r\n\r\n        window.ethereum.on(\"accountsChanged\", async function () {\r\n\r\n          await init();\r\n          \r\n        });\r\n\r\n      }\r\n    }\r\n    // funcion que abre el faucet para pedir BNBs de prueba\r\n    function faucet() {\r\n      window.open('https://testnet.binance.org/faucet-smart', '_blank');  \r\n    }\r\n\r\n  return (\r\n\r\n<div className=\"frame container\">\r\n        <div className=\"main row align-items-center g-lg-5 py-5\" style={{transform: `translateY(-${offSetY * 0.3}px)`}}>\r\n          <div className=\"col-lg-4 text-center text-lg-start\">\r\n            <form className=\"p-4 p-md-5 border rounded-3 bg-light\">\r\n            <div className=\"form-floating mb-3\">\r\n            <h2 id=\"intro\" className=\"text-muted\">No conectado</h2>\r\n            </div>\r\n            <hr className=\"my-4\"/>\r\n            <h3 id=\"tokens\" className=\"text-muted\"></h3>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-lg-4 text-center text-lg-start\">\r\n            <button id=\"btn-firma\"  onClick={() => init()} className=\"w-100 btn btn-lg btn-danger mb-4\" type=\"button\">Conectar Metamask</button>\r\n            <button id=\"faucet\"  onClick={() => faucet()} className=\"w-100 btn btn-lg btn-primary\" type=\"button\">Faucet de Binance</button>\r\n            <button  id=\"buy\" className=\"w-100 btn btn-lg btn-success d-none my-4\" type=\"button\">Comprar Avatares</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row align-items-center g-lg-5 py-5\"> \r\n            {\r\n          balance && // si hay balance, se imprimen los avatares.\r\n              balance.map((idToken) => {\r\n                return     <FetchCard idToken={idToken} />\r\n              })\r\n \r\n            }\r\n        </div> \r\n\r\n    <VideoPlayer style={{transform: `translateY(${offSetY * 1}px)`}}\r\n        className=\"Video\"\r\n        src={\r\n          \"https://fishervspirate.com//wp-content//uploads//WhatsApp-Video-2021-09-11-at-11.17.45.mp4\"\r\n        }\r\n        autoPlay={true}\r\n        muted={true}\r\n      />\r\n</div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}